@page "/orderstatuses/details"
@using Microsoft.EntityFrameworkCore
@using BookShop.Data
@inject IDbContextFactory<BookShop.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Подробнее</PageTitle>

<h1>Подробнее</h1>

<div>
    <h2>Статус заказа</h2>
    <hr />
    @if (orderstatus is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Статус</dt>
            <dd class="col-sm-10">@orderstatus.Status</dd>
        </dl>
        <div>
            <a href="@($"/orderstatuses/edit?orderstatusid={orderstatus.OrderStatusId}")" class="btn btn-danger">Редактировать</a> |
            <a href="@($"/orderstatuses")" class="btn btn-secondary">Назад к списку</a>
        </div>
    }
</div>

@code {
    private OrderStatus? orderstatus;

    [SupplyParameterFromQuery]
    private int OrderStatusId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        orderstatus = await context.OrderStatuses.FirstOrDefaultAsync(m => m.OrderStatusId == OrderStatusId);

        if (orderstatus is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}

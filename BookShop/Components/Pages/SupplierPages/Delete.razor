@page "/suppliers/delete"
@using Microsoft.EntityFrameworkCore
@using BookShop.Data
@inject IDbContextFactory<BookShop.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles = "Admin")]

<PageTitle>Удалить поставщика</PageTitle>

<h1>Удалить поставщика</h1>

<p>Вы точно хотите удалить этого поставщика?</p>
<div>
    <h2>Поставщик</h2>
    <hr />
    @if (supplier is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">ФИО</dt>
            <dd class="col-sm-10">@supplier.Name</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Адрес</dt>
            <dd class="col-sm-10">@supplier.Address</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Номер телефона</dt>
            <dd class="col-sm-10">@supplier.PhoneNumber</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Почта</dt>
            <dd class="col-sm-10">@supplier.Email</dd>
        </dl>
        <EditForm method="post" Model="supplier" OnValidSubmit="DeleteSupplier" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(supplier is null)">Удалить</button> |
            <a href="/suppliers" class="btn btn-secondary">Обратно к списку поставщиков</a>
        </EditForm>
    }
</div>

@code {
    private Supplier? supplier;

    [SupplyParameterFromQuery]
    private int SupplierId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        supplier = await context.Suppliers.FirstOrDefaultAsync(m => m.SupplierId == SupplierId);

        if (supplier is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteSupplier()
    {
        using var context = DbFactory.CreateDbContext();
        context.Suppliers.Remove(supplier!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/suppliers");
    }
}

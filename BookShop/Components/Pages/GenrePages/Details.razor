@page "/genres/details"
@using Microsoft.EntityFrameworkCore
@using BookShop.Data
@inject IDbContextFactory<BookShop.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles = "Admin")]

<PageTitle>Описание</PageTitle>

<h1>Описание</h1>

<div>
    <h2>Жанр</h2>
    <hr />
    @if (genre is null)
    {
        <p><em>Загрузка...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Название:</dt>
            <dd class="col-sm-10">@genre.Name</dd>
        </dl>
        <div>
            <a href="@($"/genres/edit?genreid={genre.GenreId}")">Редактировать</a> |
            <a href="@($"/genres")">Обратно к списку жанров</a>
        </div>
    }
</div>

@code {
    private Genre? genre;

    [SupplyParameterFromQuery]
    private int GenreId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        genre = await context.Genres.FirstOrDefaultAsync(m => m.GenreId == GenreId);

        if (genre is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}

@page "/wishlists/delete"
@using Microsoft.EntityFrameworkCore
@using BookShop.Data
@inject IDbContextFactory<BookShop.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles = "Client")]

<PageTitle>Удалить</PageTitle>

<h1>Удалить</h1>

<p>Вы точно хотите удалить это?</p>
<div>
    <h2>Wishlist</h2>
    <hr />
    @if (wishlist is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Название</dt>
            <dd class="col-sm-10">@wishlist.Book.Title</dd>
            <dt class="col-sm-2">Автор</dt>
            <dd class="col-sm-10">@wishlist.Book.Author.AuthorName</dd>
            <dt class="col-sm-2">Цена</dt>
            <dd class="col-sm-10">@wishlist.Book.Price</dd>
        </dl>
        <EditForm method="post" Model="wishlist" OnValidSubmit="DeleteWishlist" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(wishlist is null)">Удалить</button> |
            <a href="/wishlists">Обратно в избранное</a>
        </EditForm>
    }
</div>

@code {
    private Wishlist? wishlist;

    [SupplyParameterFromQuery]
    private string UserId { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        if (string.IsNullOrEmpty(UserId))
        {
            NavigationManager.NavigateTo("notfound");
            return;
        }

        using var context = DbFactory.CreateDbContext();
        wishlist = await context.Wishlists
                                .Include(w => w.Book)
                                .ThenInclude(b => b.Author)
                                .FirstOrDefaultAsync(m => m.UserId == UserId);

        if (wishlist == null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteWishlist()
    {
        using var context = DbFactory.CreateDbContext();
        context.Wishlists.Remove(wishlist!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/wishlists");
    }
}

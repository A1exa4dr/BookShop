@page "/cartitems"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using BookShop.Data
@using BookShop.Data
@implements IAsyncDisposable
@inject IDbContextFactory<BookShop.Data.ApplicationDbContext> DbFactory
@attribute [Authorize(Roles = "Client, Admin")]

<PageTitle>Index</PageTitle>

<h1>Index</h1>

<p>
    <a href="cartitems/create">Create New</a>
</p>

<QuickGrid Class="table" Items="context.CartItems">
    @* <PropertyColumn Property="cartitem => cartitem.CartItemId" /> *@
    <TemplateColumn Title="Фото">
        @if (!string.IsNullOrWhiteSpace(context.Book.ImageUrl))
        {
            <img src="@context.Book.ImageUrl" alt="Book Image" style="max-width: 100px; max-height: 100px;" />
        }
        else
        {
            <span>No Image</span>
        }
    </TemplateColumn>
    <PropertyColumn Property="cartitem => cartitem.Book.Title" />
    <PropertyColumn Property="cartitem => cartitem.Quantity" />
    <PropertyColumn Property="cartitem => cartitem.Book.Price" Title="Цена за единицу" />
    <TemplateColumn Title="Общая цена" Context="cartitem">
        @((cartitem.Quantity * cartitem.Book.Price).ToString("C"))
    </TemplateColumn>

    <TemplateColumn Context="cartitem">
        <a href="@($"cartitems/edit?cartid={cartitem.CartId}")">Edit</a> |
        <a href="@($"cartitems/details?cartid={cartitem.CartId}")">Details</a> |
        <a href="@($"cartitems/delete?cartid={cartitem.CartId}")">Delete</a>
    </TemplateColumn>
</QuickGrid>

@code {
    private ApplicationDbContext context = default!;
    private List<CartItem> cartItems = new();

    protected override async Task OnInitializedAsync()
    {
        context = DbFactory.CreateDbContext();
        cartItems = await context.CartItems
            .Include(ci => ci.Book) // Подгружаем данные о книге
            .ToListAsync();
    }

    
    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}

@page "/cartitems/details"
@using Microsoft.EntityFrameworkCore
@using BookShop.Data
@inject IDbContextFactory<BookShop.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>CartItem</h2>
    <hr />
    @if (cartitem is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">CartItemId</dt>
            <dd class="col-sm-10">@cartitem.CartItemId</dd>
            <dt class="col-sm-2">Quantity</dt>
            <dd class="col-sm-10">@cartitem.Quantity</dd>
        </dl>
        <div>
            <a href="@($"/cartitems/edit?cartid={cartitem.CartId}")">Edit</a> |
            <a href="@($"/cartitems")">Back to List</a>
        </div>
    }
</div>

@code {
    private CartItem? cartitem;

    [SupplyParameterFromQuery]
    private int CartId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        cartitem = await context.CartItems.FirstOrDefaultAsync(m => m.CartId == CartId);

        if (cartitem is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
